{"ast":null,"code":"var _jsxFileName = \"/Users/vitalii/Documents/GitHub/DevFront/src/components/UI/ButtonBread.tsx\";\nimport React from 'react';\nimport classNames from 'classnames'; // Adds additional classes if they are passed through props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonBread = props => {\n  const {\n    width,\n    className,\n    type = 'button'\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: type,\n    ...props,\n    className: classNames('font-sans font-bold text-lg 3xl:text-2xl h-16 3xl:w-96 3xl:h-24 rounded-2xl bg-bread mt-10', width || 'w-96',\n    // // Устанавливает ширину по умолчанию или ширину из пропсов\n    className // Добавляет дополнительные классы, если они переданы через пропсы\n    ),\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n_c = ButtonBread;\nexport default ButtonBread;\nvar _c;\n$RefreshReg$(_c, \"ButtonBread\");","map":{"version":3,"names":["React","classNames","jsxDEV","_jsxDEV","ButtonBread","props","width","className","type","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vitalii/Documents/GitHub/DevFront/src/components/UI/ButtonBread.tsx"],"sourcesContent":["import React from 'react'\nimport classNames from 'classnames' // Adds additional classes if they are passed through props\n\ninterface ButtonBreadProps {\n\tname: string,\n\tonClick?: () => void,\n  width?: string,\n\tclassName?: string,\n\ttype?: 'submit' | 'button'\n}\n\nconst ButtonBread: React.FC<ButtonBreadProps> = (props) => {\n\tconst { width, className, type = 'button'} = props\n\treturn (\n\t\t<button\n\t\ttype={type}\n\t\t{...props}\n\t\tclassName={classNames(\n\t\t\t'font-sans font-bold text-lg 3xl:text-2xl h-16 3xl:w-96 3xl:h-24 rounded-2xl bg-bread mt-10',\n\t\t\twidth || 'w-96', // // Устанавливает ширину по умолчанию или ширину из пропсов\n\t\t\tclassName // Добавляет дополнительные классы, если они переданы через пропсы\n\t\t\t)}>\n\t\t\t{props.name}\n\t\t</button>\n\t)\n}\n\nexport default ButtonBread\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUpC,MAAMC,WAAuC,GAAIC,KAAK,IAAK;EAC1D,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,IAAI,GAAG;EAAQ,CAAC,GAAGH,KAAK;EAClD,oBACCF,OAAA;IACAK,IAAI,EAAEA,IAAK;IAAA,GACPH,KAAK;IACTE,SAAS,EAAEN,UAAU,CACpB,4FAA4F,EAC5FK,KAAK,IAAI,MAAM;IAAE;IACjBC,SAAS,CAAC;IACV,CAAE;IAAAE,QAAA,EACDJ,KAAK,CAACK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX,CAAC;AAAAC,EAAA,GAdKX,WAAuC;AAgB7C,eAAeA,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}